데이터가 형상 뿐만 아니라, 대표적인 defect 형상 기준으로 분

여러 클래스 중 비슷한것끼리 묶어서 새롭게 클래스 선언 (전체 클래스 수를 줄임)

Q. 영상만으로 분류가 되었는지.
- 형상 정보뿐 아니라, 제조과정에 대한 정보도 포함되기 때문에 영상만 사용해선 정확도에 한계가 있음.
- 따라서 abnormal인 확률을 확인할 수 있는 정도로 만들고자함.

Q. 실제 현업에서 사용가능한 네트워크 사양.
- 자원. – 여러 개의 공정이 있으므로, 각 공정마다 17개의 모델을 사용하기엔 어려움.
- 추론단계에 사용되는 자원을 잘 고려해야함. (confluence-p23.03-edit으로 직접 작성 가능)
Q. Evaluation 가중치 관련.
- 정상을 이상으로 할지라도 이상을 잘잡을 수 있도록.
Q. 배경패턴의 경우
- 매우 다양한 패턴이 있음.
- 패턴 자체가 클래스 분류에 영향이 갈 수 있음.
- Cropping이 필요할수도 있음. (하지만 boundingbox를 직접 구하기 쉽지않음) – 자동으로 boundingbox를 찾을 수 있어야함.
- 음각, 양각이 중요한 클래스도 있으므로 회전이나 flip이 안좋은 영향을 미칠 수 있음.

1개 클래스에 1개 모델을 사용하는 것은 비추천.
-	17개가 아닌 더 많은 클래스가 있는 경우가 있음.
-	1개의 모델로 테스트한 결과를 일단 보이고. – 어렵다면 분류에 사용되는 augmentation 방법을 제공해주면 이를 활용해보면 좋을 것 같음. – 

오늘 미팅결과 Confluence정리
-	모델구조 (autoencoder 구조). – 간략한 설명
-	현재 데이터 전처리 방식
-	현재 실험 방식. (15개 따로 훈련, )
-	결과(
-	실제결과
-	에러사항 등
-	Comment: normal을 최대한 하나의 모델로 진행
-	안되는 defect같은 경우 전처리에 집중해서 처리가 필요할 듯. (흑백에 사용되는 방법들)
-	전처리를 잘 하지 않는이상 결과 향상이 어려우므로 전처리 중요. (데이터 비슷한거 묶기).
-	Open neural network exchange (ONNX) : 최종 코드를 해당 포멧으로 제출해야함. 





-	특정 클래스는 앞으로 튀어나온경우라 분류된 경우도 있음. -> 딥러닝 말고 다른방법도 사용할수도 있을 듯.

지금 실험결과에 대해 정리해서 엔지니어에게 보고 (1 vs left가 안되는 결과).
-	비슷한거끼리 클래스 묶어서 제공해줄 수도있으며
-	
각 클래스의 형상도 특이한게 있을 수밖에 없음



1vs left가 어렵
	1 vs 1으로 진행.
월, 수. 연락가능.


Mnist, 기준 

논문 reference 

MIA- 2.5page
